-- c, d, E, e, f, g, G, i, o, u, X, and x
testcases = {
	["%"]={"%"},
	["s"]={[""]="", ["abc"]="abc", [1]="1"},
	["q"]={["\n"]='"\\\n"', ["\r"]='"\\r"', ["\""]='"\\""', ["\t"]='"\t"'},
	["i"]={[-1]='-1', [1]='1', ["1"]='1', [1.1]='1', [10]='10', [255]='255'},
	--["c"]={[-1]='\255', [1]='\1', ["1"]='\1', [1.1]='\1', [10]='\10', [255]='\255'},
	["d"]={[-1]='-1', [1]='1', ["1"]='1', [1.1]='1', [10]='10', [255]='255'},
	["e"]={[-1]="-1.0", [1]="1.0", ["1"]="1.0", [1.1]="1.1", 
				[10]="10.0", [255]="255.0"},
	["E"]={[-1]="-1.0", [1]="1.0", ["1"]="1.0", [1.1]="1.1", 
				[10]="10.0", [255]="255.0"},
	["f"]={[-1]="-1.0", [1]="1.0", ["1"]="1.0", [1.1]="1.1", 
				[10]="10.0", [255]="255.0"},
	["g"]={[-1]='-1', [1]='1', ["1"]='1', [1.1]='1.1', [10]='10', [255]='255'},
	["G"]={[-1]='-1', [1]='1', ["1"]='1', [1.1]='1.1', [10]='10', [255]='255'},
	["i"]={[-1]='-1', [1]='1', ["1"]='1', [1.1]='1', [10]='10', [255]='255'},
	["o"]={[-1]="37777777777", [1]='1', ["1"]='1', [1.1]='1', [10]='12', [255]="377"},
	["u"]={[-1]="4294967295", [1]='1', ["1"]='1', [1.1]='1', [10]='10', [255]='255'},
	["x"]={[-1]="ffffffff", [1]='1', ["1"]='1', [1.1]='1', [10]='a', [255]="ff"},
	["X"]={[-1]="FFFFFFFF", [1]='1', ["1"]='1', [1.1]='1', [10]='A', [255]='FF'},
}

for t, c in pairs(testcases) do
	local template = "%"..t
	for k, v in pairs(c) do
		local result = string.format(template, k)
		local msg = string.format("string.format(%q, %q) == %q, expected %q",
			template, k, result, v)
		assert(result == v, msg)
		--print(string.format("string.format(%q, %q) == %q", template, k, result))
	end
end
